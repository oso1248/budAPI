"""00005_commodities_tables

Revision ID: 4e2afed6d187
Revises: 6f561014f67a
Create Date: 2022-01-22 16:27:28.843672

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.orm import sessionmaker
from api.config import settings
Session = sessionmaker()


# revision identifiers, used by Alembic.
revision = '4e2afed6d187'
down_revision = '6f561014f67a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('commodities',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name_bit', sa.String(), nullable=False),
                    sa.Column('name_local', sa.String(), nullable=False),
                    sa.Column('location', sa.String(), nullable=False),
                    sa.Column('sap', sa.String(), nullable=False),
                    sa.Column('inventory', sa.String(), nullable=False),
                    sa.Column('threshold', sa.Integer(), nullable=False),
                    sa.Column('per_pallet', sa.Integer(), nullable=False),
                    sa.Column('per_unit', sa.Float(), nullable=False),
                    sa.Column('unit_of_measurement',
                              sa.String(), nullable=False),
                    sa.Column('type', sa.String(), nullable=False),
                    sa.Column('note', sa.String(), nullable=True),
                    sa.Column('balance_inactive', sa.Float(), nullable=True),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('id_supplier', sa.Integer(), nullable=False),
                    sa.Column('created_by', sa.Integer(), nullable=False),
                    sa.Column('updated_by', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['created_by'], ['users.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['id_supplier'], ['suppliers.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['updated_by'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name_bit'),
                    sa.UniqueConstraint('name_local')
                    )

    bind = op.get_bind()
    session = Session(bind=bind)
    session.execute("""
        CREATE TRIGGER update_timestamp
        BEFORE UPDATE
        ON commodities 
        FOR EACH ROW
        EXECUTE PROCEDURE update_timestamp();
    """)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('commodities')
    # ### end Alembic commands ###
