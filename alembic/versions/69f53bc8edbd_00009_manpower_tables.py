"""00009_manpower_tables

Revision ID: 69f53bc8edbd
Revises: 8a5e5e113ba1
Create Date: 2022-01-29 13:55:49.272646

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.orm import sessionmaker
Session = sessionmaker()


# revision identifiers, used by Alembic.
revision = '69f53bc8edbd'
down_revision = '8a5e5e113ba1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('manpower_group',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('shift', sa.Integer(), nullable=False),
                    sa.Column('note', sa.String(), nullable=True),
                    sa.Column('created_by', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['created_by'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('manpower_individual',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('shift', sa.Integer(), nullable=False),
                    sa.Column('id_users', sa.Integer(), nullable=False),
                    sa.Column('id_jobs', sa.Integer(), nullable=False),
                    sa.Column('note', sa.String(), nullable=True),
                    sa.Column('created_by', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['created_by'], ['users.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['id_users'], ['users.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['id_jobs'], ['jobs.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    bind = op.get_bind()
    session = Session(bind=bind)
    session.execute("""
        CREATE OR REPLACE FUNCTION delete_old_rows_manpower_group() RETURNS TRIGGER
        LANGUAGE plpgsql
        AS
        $$
        BEGIN
            DELETE FROM manpower_group WHERE created_at < NOW() - INTERVAL '1095 days';
        RETURN NULL;
        END;
        $$;
    """)
    session.execute("""
        CREATE TRIGGER trigger_delete_old_rows_manpower_group
        AFTER INSERT ON manpower_group
        EXECUTE PROCEDURE delete_old_rows_manpower_group();
    """)
    session.execute("""
        CREATE OR REPLACE FUNCTION delete_old_rows_manpower_individual() RETURNS TRIGGER
        LANGUAGE plpgsql
        AS
        $$
        BEGIN
            DELETE FROM manpower_individual WHERE created_at < NOW() - INTERVAL '1095 days';
        RETURN NULL;
        END;
        $$;
    """)
    session.execute("""
        CREATE TRIGGER trigger_delete_old_rows_manpower_individual
        AFTER INSERT ON manpower_individual
        EXECUTE PROCEDURE delete_old_rows_manpower_individual();
    """)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('manpower_individual')
    op.drop_table('manpower_group')
    bind = op.get_bind()
    session = Session(bind=bind)
    session.execute("DROP FUNCTION delete_old_rows_manpower_group();")
    session.execute("DROP FUNCTION delete_old_rows_manpower_individual();")
    # ### end Alembic commands ###
