"""00003_jobs_tables

Revision ID: d0cfcd406251
Revises: ed5fe6a85a06
Create Date: 2022-01-22 09:24:15.050275

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.orm import sessionmaker
from api.config import settings
Session = sessionmaker()


# revision identifiers, used by Alembic.
revision = 'd0cfcd406251'
down_revision = 'ed5fe6a85a06'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('area', sa.String(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_work_restriction',
                              sa.Boolean(), nullable=False),
                    sa.Column('created_by', sa.Integer(), nullable=False),
                    sa.Column('updated_by', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['created_by'], ['users.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['updated_by'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('bridge_users_jobs',
                    sa.Column('id_users', sa.Integer(), nullable=False),
                    sa.Column('id_jobs', sa.Integer(), nullable=False),
                    sa.Column('skap', sa.Integer(), nullable=False),
                    sa.Column('created_by', sa.Integer(), nullable=False),
                    sa.Column('updated_by', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['created_by'], ['users.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['id_jobs'], ['jobs.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['id_users'], ['users.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['updated_by'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id_users', 'id_jobs')
                    )

    bind = op.get_bind()
    session = Session(bind=bind)
    session.execute("""
        CREATE TRIGGER update_timestamp
        BEFORE UPDATE
        ON bridge_users_jobs 
        FOR EACH ROW
        EXECUTE PROCEDURE update_timestamp();
    """)
    session.execute("""
        CREATE TRIGGER update_timestamp
        BEFORE UPDATE
        ON jobs 
        FOR EACH ROW
        EXECUTE PROCEDURE update_timestamp();
    """)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bridge_users_jobs')
    op.drop_table('jobs')
    # ### end Alembic commands ###
